jobs:
  package:
    executor: serverless/default
    working_directory: ~/tmp
    steps:
      - checkout     
      - aws-cli/setup
      - serverless/setup:
          app-name: serverless-framework-orb
          org-name: circleci          
      - run:
          name: "Setup custom environment variables"
          command: |
            STAGE_NAME=${CIRCLE_BRANCH,,} 
            STAGE_NAME=${STAGE_NAME//-/}
            STAGE_NAME=${STAGE_NAME//\//}
            echo "export STAGE_NAME=$STAGE_NAME" >> $BASH_ENV
      - restore_cache:
          name: Restoring node_modules
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - node-v1-{{ .Branch }}-
            - node-v1-       
      - run:
          name: Install dependencies
          command: |
            HUSKY_SKIP_INSTALL=1 npm ci
      - save_cache:
          name: Saving node_modules
          paths:
            - node_modules
          key: node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
      # run tests!
      - run: 
          name: Run linting
          command: npm run lint:check -- -f checkstyle -o checkstyle-result.xml
          # hudson.plugins.checkstyle.CheckStylePublisher
      - run:
          name: Run tests
          command: JEST_JUNIT_OUTPUT=./jest-test-results.xml CI=true npm test -- --ci --reporters=default --reporters=jest-junit --coverage
          # hudson.plugins.checkstyle.CheckStylePublisher                  
      - run:
          # todo: this should not use npx, perhaps orb is broken?
          name: Package
          command: |
            env=dev
            npx serverless package --verbose --stage $STAGE_NAME --env dev --package artifacts/
      # Persist the specified paths (workspace/echo-output) into the workspace for use in downstream job.
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: ~/tmp
          # Must be relative path from root
          paths:
            - artifacts
  dev_deploy: 
    executor: serverless/default
    steps:
      - checkout     
      - aws-cli/setup
      - serverless/setup:
          app-name: serverless-framework-orb
          org-name: circleci 
      - restore_cache:
          name: Restoring node_modules
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "/package-lock.json" }}
            - node-v1-{{ .Branch }}-
            - node-v1-                    
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/tmp    
      - run:
          name: Install dependencies
          command: npm ci         
      - run:
          name: Deploy to development  
          command: |
            env=dev
            npx serverless deploy --verbose --stage=main --env dev --package ~/tmp/artifacts
  prod_deploy: 
    executor: serverless/default
    steps:
      - checkout     
      - aws-cli/setup
      - serverless/setup:
          app-name: serverless-framework-orb
          org-name: circleci          
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: Install dependencies
          command: |
            npm i      
      - run:
          command: echo 'Deploying to production...'
          name: Deploy to production
orbs:
  aws-cli: circleci/aws-cli@2.1.0
  serverless: circleci/serverless-framework@1.0.1
version: 2.1
workflows:       
  package:
    jobs:
      - package:
          context:
            - org-global 
      - dev_deploy:
          requires:
            - package        
          context:
            - org-global             
          filters:
            branches:
              only: main
      - prod_deploy:
          type: approval
          requires:
            - dev_deploy            
          filters:
            branches:
              only: main
